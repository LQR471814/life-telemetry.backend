// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: services/eczema/v1/api.proto

package eczemav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Location int32

const (
	Location_SCALP_F      Location = 0
	Location_SCALP_B      Location = 1
	Location_SCALP_L      Location = 2
	Location_SCALP_R      Location = 3
	Location_FACE_LT      Location = 4
	Location_FACE_RT      Location = 5
	Location_EAR_LT       Location = 6
	Location_EAR_LB       Location = 7
	Location_EAR_RT       Location = 8
	Location_EAR_RB       Location = 9
	Location_NECK_FL      Location = 10
	Location_NECK_FR      Location = 11
	Location_NECK_BL      Location = 12
	Location_NECK_BR      Location = 13
	Location_SHOULDER_L   Location = 14
	Location_SHOULDER_R   Location = 15
	Location_ELBOW_LC     Location = 16
	Location_ELBOW_RC     Location = 17
	Location_ELBOW_L_UP   Location = 18
	Location_ELBOW_R_UP   Location = 19
	Location_CHEST_PEC_L  Location = 20
	Location_CHEST_PEC_R  Location = 21
	Location_CHEST_CENTER Location = 22
	Location_BELLY_UP     Location = 23
	Location_BELLY_LO     Location = 24
	Location_TORSO_FL_UP  Location = 25
	Location_TORSO_FL_LO  Location = 26
	Location_TORSO_FR_UP  Location = 27
	Location_TORSO_FR_LO  Location = 28
	Location_TORSO_BL     Location = 29
	Location_TORSO_BR     Location = 30
	Location_BACK_TL      Location = 31
	Location_BACK_TR      Location = 32
	Location_WAIST_FL     Location = 33
	Location_WAIST_FR     Location = 34
	Location_WAIST_SL     Location = 35
	Location_WAIST_SR     Location = 36
	Location_CROTCH_FR    Location = 37
	Location_CROTCH_FL    Location = 38
	Location_CROTCH_B     Location = 39
	Location_BUTT_L       Location = 40
	Location_BUTT_R       Location = 41
	Location_THIGH_FL     Location = 42
	Location_THIGH_FR     Location = 43
	Location_THIGH_BL     Location = 44
	Location_THIGH_BR     Location = 45
	Location_THIGH_SL     Location = 46
	Location_THIGH_SR     Location = 47
	Location_KNEE_FL      Location = 48
	Location_KNEE_FR      Location = 49
	Location_KNEE_BL      Location = 50
	Location_KNEE_BR      Location = 51
	Location_KNEE_SL      Location = 52
	Location_KNEE_SR      Location = 53
	Location_LEG_FL       Location = 54
	Location_LEG_BL       Location = 55
	Location_LEG_FR       Location = 56
	Location_LEG_BR       Location = 57
)

// Enum value maps for Location.
var (
	Location_name = map[int32]string{
		0:  "SCALP_F",
		1:  "SCALP_B",
		2:  "SCALP_L",
		3:  "SCALP_R",
		4:  "FACE_LT",
		5:  "FACE_RT",
		6:  "EAR_LT",
		7:  "EAR_LB",
		8:  "EAR_RT",
		9:  "EAR_RB",
		10: "NECK_FL",
		11: "NECK_FR",
		12: "NECK_BL",
		13: "NECK_BR",
		14: "SHOULDER_L",
		15: "SHOULDER_R",
		16: "ELBOW_LC",
		17: "ELBOW_RC",
		18: "ELBOW_L_UP",
		19: "ELBOW_R_UP",
		20: "CHEST_PEC_L",
		21: "CHEST_PEC_R",
		22: "CHEST_CENTER",
		23: "BELLY_UP",
		24: "BELLY_LO",
		25: "TORSO_FL_UP",
		26: "TORSO_FL_LO",
		27: "TORSO_FR_UP",
		28: "TORSO_FR_LO",
		29: "TORSO_BL",
		30: "TORSO_BR",
		31: "BACK_TL",
		32: "BACK_TR",
		33: "WAIST_FL",
		34: "WAIST_FR",
		35: "WAIST_SL",
		36: "WAIST_SR",
		37: "CROTCH_FR",
		38: "CROTCH_FL",
		39: "CROTCH_B",
		40: "BUTT_L",
		41: "BUTT_R",
		42: "THIGH_FL",
		43: "THIGH_FR",
		44: "THIGH_BL",
		45: "THIGH_BR",
		46: "THIGH_SL",
		47: "THIGH_SR",
		48: "KNEE_FL",
		49: "KNEE_FR",
		50: "KNEE_BL",
		51: "KNEE_BR",
		52: "KNEE_SL",
		53: "KNEE_SR",
		54: "LEG_FL",
		55: "LEG_BL",
		56: "LEG_FR",
		57: "LEG_BR",
	}
	Location_value = map[string]int32{
		"SCALP_F":      0,
		"SCALP_B":      1,
		"SCALP_L":      2,
		"SCALP_R":      3,
		"FACE_LT":      4,
		"FACE_RT":      5,
		"EAR_LT":       6,
		"EAR_LB":       7,
		"EAR_RT":       8,
		"EAR_RB":       9,
		"NECK_FL":      10,
		"NECK_FR":      11,
		"NECK_BL":      12,
		"NECK_BR":      13,
		"SHOULDER_L":   14,
		"SHOULDER_R":   15,
		"ELBOW_LC":     16,
		"ELBOW_RC":     17,
		"ELBOW_L_UP":   18,
		"ELBOW_R_UP":   19,
		"CHEST_PEC_L":  20,
		"CHEST_PEC_R":  21,
		"CHEST_CENTER": 22,
		"BELLY_UP":     23,
		"BELLY_LO":     24,
		"TORSO_FL_UP":  25,
		"TORSO_FL_LO":  26,
		"TORSO_FR_UP":  27,
		"TORSO_FR_LO":  28,
		"TORSO_BL":     29,
		"TORSO_BR":     30,
		"BACK_TL":      31,
		"BACK_TR":      32,
		"WAIST_FL":     33,
		"WAIST_FR":     34,
		"WAIST_SL":     35,
		"WAIST_SR":     36,
		"CROTCH_FR":    37,
		"CROTCH_FL":    38,
		"CROTCH_B":     39,
		"BUTT_L":       40,
		"BUTT_R":       41,
		"THIGH_FL":     42,
		"THIGH_FR":     43,
		"THIGH_BL":     44,
		"THIGH_BR":     45,
		"THIGH_SL":     46,
		"THIGH_SR":     47,
		"KNEE_FL":      48,
		"KNEE_FR":      49,
		"KNEE_BL":      50,
		"KNEE_BR":      51,
		"KNEE_SL":      52,
		"KNEE_SR":      53,
		"LEG_FL":       54,
		"LEG_BL":       55,
		"LEG_FR":       56,
		"LEG_BR":       57,
	}
)

func (x Location) Enum() *Location {
	p := new(Location)
	*p = x
	return p
}

func (x Location) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Location) Descriptor() protoreflect.EnumDescriptor {
	return file_services_eczema_v1_api_proto_enumTypes[0].Descriptor()
}

func (Location) Type() protoreflect.EnumType {
	return &file_services_eczema_v1_api_proto_enumTypes[0]
}

func (x Location) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Location.Descriptor instead.
func (Location) EnumDescriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	Action_NOTHING        Action = 0
	Action_SCRATCH        Action = 1
	Action_APPLY_LOTION   Action = 2
	Action_APPLY_STEROIDS Action = 3
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "NOTHING",
		1: "SCRATCH",
		2: "APPLY_LOTION",
		3: "APPLY_STEROIDS",
	}
	Action_value = map[string]int32{
		"NOTHING":        0,
		"SCRATCH":        1,
		"APPLY_LOTION":   2,
		"APPLY_STEROIDS": 3,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_services_eczema_v1_api_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_services_eczema_v1_api_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{1}
}

type Variant int32

const (
	Variant_SCALING Variant = 0
	Variant_DOTTING Variant = 1
	Variant_SCALP   Variant = 2
)

// Enum value maps for Variant.
var (
	Variant_name = map[int32]string{
		0: "SCALING",
		1: "DOTTING",
		2: "SCALP",
	}
	Variant_value = map[string]int32{
		"SCALING": 0,
		"DOTTING": 1,
		"SCALP":   2,
	}
)

func (x Variant) Enum() *Variant {
	p := new(Variant)
	*p = x
	return p
}

func (x Variant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Variant) Descriptor() protoreflect.EnumDescriptor {
	return file_services_eczema_v1_api_proto_enumTypes[2].Descriptor()
}

func (Variant) Type() protoreflect.EnumType {
	return &file_services_eczema_v1_api_proto_enumTypes[2]
}

func (x Variant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Variant.Descriptor instead.
func (Variant) EnumDescriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{2}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     uint64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Duration uint64 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// how bad the eczema is in that region right now
	// - 0 = completely clear
	// - 0.25 = minimal issues
	// - 0.5 = some issues
	// - 0.75 = significant issues
	// - 1 = in dire need of help
	State    float32  `protobuf:"fixed32,3,opt,name=state,proto3" json:"state,omitempty"`
	Variant  Variant  `protobuf:"varint,4,opt,name=variant,proto3,enum=services.eczema.v1.Variant" json:"variant,omitempty"`
	Location Location `protobuf:"varint,5,opt,name=location,proto3,enum=services.eczema.v1.Location" json:"location,omitempty"`
	Action   Action   `protobuf:"varint,6,opt,name=action,proto3,enum=services.eczema.v1.Action" json:"action,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eczema_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_services_eczema_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Event) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Event) GetState() float32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Event) GetVariant() Variant {
	if x != nil {
		return x.Variant
	}
	return Variant_SCALING
}

func (x *Event) GetLocation() Location {
	if x != nil {
		return x.Location
	}
	return Location_SCALP_F
}

func (x *Event) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_NOTHING
}

// Push
type PushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *PushRequest) Reset() {
	*x = PushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eczema_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushRequest) ProtoMessage() {}

func (x *PushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_eczema_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushRequest.ProtoReflect.Descriptor instead.
func (*PushRequest) Descriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *PushRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type PushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushResponse) Reset() {
	*x = PushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eczema_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushResponse) ProtoMessage() {}

func (x *PushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_eczema_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushResponse.ProtoReflect.Descriptor instead.
func (*PushResponse) Descriptor() ([]byte, []int) {
	return file_services_eczema_v1_api_proto_rawDescGZIP(), []int{2}
}

var File_services_eczema_v1_api_proto protoreflect.FileDescriptor

var file_services_eczema_v1_api_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x63, 0x7a, 0x65, 0x6d,
	0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e,
	0x76, 0x31, 0x22, 0xf2, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65,
	0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65,
	0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xb0, 0x06, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x41, 0x4c, 0x50, 0x5f,
	0x46, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x41, 0x4c, 0x50, 0x5f, 0x42, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x41, 0x4c, 0x50, 0x5f, 0x4c, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x43, 0x41, 0x4c, 0x50, 0x5f, 0x52, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41,
	0x43, 0x45, 0x5f, 0x4c, 0x54, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x52, 0x54, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x41, 0x52, 0x5f, 0x4c, 0x54, 0x10, 0x06,
	0x12, 0x0a, 0x0a, 0x06, 0x45, 0x41, 0x52, 0x5f, 0x4c, 0x42, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06,
	0x45, 0x41, 0x52, 0x5f, 0x52, 0x54, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x41, 0x52, 0x5f,
	0x52, 0x42, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x43, 0x4b, 0x5f, 0x46, 0x4c, 0x10,
	0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x43, 0x4b, 0x5f, 0x46, 0x52, 0x10, 0x0b, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x45, 0x43, 0x4b, 0x5f, 0x42, 0x4c, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x45, 0x43, 0x4b, 0x5f, 0x42, 0x52, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x4f, 0x55,
	0x4c, 0x44, 0x45, 0x52, 0x5f, 0x4c, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x4f, 0x55,
	0x4c, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4c, 0x42, 0x4f,
	0x57, 0x5f, 0x4c, 0x43, 0x10, 0x10, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4c, 0x42, 0x4f, 0x57, 0x5f,
	0x52, 0x43, 0x10, 0x11, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4c, 0x42, 0x4f, 0x57, 0x5f, 0x4c, 0x5f,
	0x55, 0x50, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4c, 0x42, 0x4f, 0x57, 0x5f, 0x52, 0x5f,
	0x55, 0x50, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x45,
	0x43, 0x5f, 0x4c, 0x10, 0x14, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48, 0x45, 0x53, 0x54, 0x5f, 0x50,
	0x45, 0x43, 0x5f, 0x52, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x48, 0x45, 0x53, 0x54, 0x5f,
	0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x16, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x45, 0x4c, 0x4c,
	0x59, 0x5f, 0x55, 0x50, 0x10, 0x17, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x45, 0x4c, 0x4c, 0x59, 0x5f,
	0x4c, 0x4f, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x52, 0x53, 0x4f, 0x5f, 0x46, 0x4c,
	0x5f, 0x55, 0x50, 0x10, 0x19, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x52, 0x53, 0x4f, 0x5f, 0x46,
	0x4c, 0x5f, 0x4c, 0x4f, 0x10, 0x1a, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x52, 0x53, 0x4f, 0x5f,
	0x46, 0x52, 0x5f, 0x55, 0x50, 0x10, 0x1b, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x52, 0x53, 0x4f,
	0x5f, 0x46, 0x52, 0x5f, 0x4c, 0x4f, 0x10, 0x1c, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x4f, 0x52, 0x53,
	0x4f, 0x5f, 0x42, 0x4c, 0x10, 0x1d, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x4f, 0x52, 0x53, 0x4f, 0x5f,
	0x42, 0x52, 0x10, 0x1e, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x4c, 0x10,
	0x1f, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x54, 0x52, 0x10, 0x20, 0x12, 0x0c,
	0x0a, 0x08, 0x57, 0x41, 0x49, 0x53, 0x54, 0x5f, 0x46, 0x4c, 0x10, 0x21, 0x12, 0x0c, 0x0a, 0x08,
	0x57, 0x41, 0x49, 0x53, 0x54, 0x5f, 0x46, 0x52, 0x10, 0x22, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x41,
	0x49, 0x53, 0x54, 0x5f, 0x53, 0x4c, 0x10, 0x23, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x41, 0x49, 0x53,
	0x54, 0x5f, 0x53, 0x52, 0x10, 0x24, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x52, 0x4f, 0x54, 0x43, 0x48,
	0x5f, 0x46, 0x52, 0x10, 0x25, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x52, 0x4f, 0x54, 0x43, 0x48, 0x5f,
	0x46, 0x4c, 0x10, 0x26, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x4f, 0x54, 0x43, 0x48, 0x5f, 0x42,
	0x10, 0x27, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x55, 0x54, 0x54, 0x5f, 0x4c, 0x10, 0x28, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x55, 0x54, 0x54, 0x5f, 0x52, 0x10, 0x29, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48,
	0x49, 0x47, 0x48, 0x5f, 0x46, 0x4c, 0x10, 0x2a, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x47,
	0x48, 0x5f, 0x46, 0x52, 0x10, 0x2b, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x47, 0x48, 0x5f,
	0x42, 0x4c, 0x10, 0x2c, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x42, 0x52,
	0x10, 0x2d, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x53, 0x4c, 0x10, 0x2e,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x48, 0x49, 0x47, 0x48, 0x5f, 0x53, 0x52, 0x10, 0x2f, 0x12, 0x0b,
	0x0a, 0x07, 0x4b, 0x4e, 0x45, 0x45, 0x5f, 0x46, 0x4c, 0x10, 0x30, 0x12, 0x0b, 0x0a, 0x07, 0x4b,
	0x4e, 0x45, 0x45, 0x5f, 0x46, 0x52, 0x10, 0x31, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x4e, 0x45, 0x45,
	0x5f, 0x42, 0x4c, 0x10, 0x32, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x4e, 0x45, 0x45, 0x5f, 0x42, 0x52,
	0x10, 0x33, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x4e, 0x45, 0x45, 0x5f, 0x53, 0x4c, 0x10, 0x34, 0x12,
	0x0b, 0x0a, 0x07, 0x4b, 0x4e, 0x45, 0x45, 0x5f, 0x53, 0x52, 0x10, 0x35, 0x12, 0x0a, 0x0a, 0x06,
	0x4c, 0x45, 0x47, 0x5f, 0x46, 0x4c, 0x10, 0x36, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x47, 0x5f,
	0x42, 0x4c, 0x10, 0x37, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x47, 0x5f, 0x46, 0x52, 0x10, 0x38,
	0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x47, 0x5f, 0x42, 0x52, 0x10, 0x39, 0x2a, 0x48, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x52, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x4c, 0x4f, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x53, 0x54, 0x45, 0x52,
	0x4f, 0x49, 0x44, 0x53, 0x10, 0x03, 0x2a, 0x2e, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x43, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x4f, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x43, 0x41, 0x4c, 0x50, 0x10, 0x02, 0x32, 0x5a, 0x0a, 0x0d, 0x45, 0x63, 0x7a, 0x65, 0x6d, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65, 0x6d,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65,
	0x6d, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xbe, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x6c, 0x69, 0x66, 0x65, 0x2d,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x2f,
	0x76, 0x31, 0x3b, 0x65, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x45,
	0x58, 0xaa, 0x02, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x63, 0x7a,
	0x65, 0x6d, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x5c, 0x45, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x45, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x45, 0x63, 0x7a, 0x65, 0x6d, 0x61, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_eczema_v1_api_proto_rawDescOnce sync.Once
	file_services_eczema_v1_api_proto_rawDescData = file_services_eczema_v1_api_proto_rawDesc
)

func file_services_eczema_v1_api_proto_rawDescGZIP() []byte {
	file_services_eczema_v1_api_proto_rawDescOnce.Do(func() {
		file_services_eczema_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_eczema_v1_api_proto_rawDescData)
	})
	return file_services_eczema_v1_api_proto_rawDescData
}

var file_services_eczema_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_services_eczema_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_services_eczema_v1_api_proto_goTypes = []any{
	(Location)(0),        // 0: services.eczema.v1.Location
	(Action)(0),          // 1: services.eczema.v1.Action
	(Variant)(0),         // 2: services.eczema.v1.Variant
	(*Event)(nil),        // 3: services.eczema.v1.Event
	(*PushRequest)(nil),  // 4: services.eczema.v1.PushRequest
	(*PushResponse)(nil), // 5: services.eczema.v1.PushResponse
}
var file_services_eczema_v1_api_proto_depIdxs = []int32{
	2, // 0: services.eczema.v1.Event.variant:type_name -> services.eczema.v1.Variant
	0, // 1: services.eczema.v1.Event.location:type_name -> services.eczema.v1.Location
	1, // 2: services.eczema.v1.Event.action:type_name -> services.eczema.v1.Action
	3, // 3: services.eczema.v1.PushRequest.events:type_name -> services.eczema.v1.Event
	4, // 4: services.eczema.v1.EczemaService.Push:input_type -> services.eczema.v1.PushRequest
	5, // 5: services.eczema.v1.EczemaService.Push:output_type -> services.eczema.v1.PushResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_services_eczema_v1_api_proto_init() }
func file_services_eczema_v1_api_proto_init() {
	if File_services_eczema_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_eczema_v1_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eczema_v1_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eczema_v1_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_eczema_v1_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_eczema_v1_api_proto_goTypes,
		DependencyIndexes: file_services_eczema_v1_api_proto_depIdxs,
		EnumInfos:         file_services_eczema_v1_api_proto_enumTypes,
		MessageInfos:      file_services_eczema_v1_api_proto_msgTypes,
	}.Build()
	File_services_eczema_v1_api_proto = out.File
	file_services_eczema_v1_api_proto_rawDesc = nil
	file_services_eczema_v1_api_proto_goTypes = nil
	file_services_eczema_v1_api_proto_depIdxs = nil
}
